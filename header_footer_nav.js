// UPDATED header_footer_nav.js FOR TOP NAV REDESIGN


/*
Purpose: Creates global header, footer and navigation, Login/Logout functionalities, Show Special Offers Sign-up screen, Show Inactivity Screen.
-------------------------
2) Create Footer- Creates localized footer(using 'footer_localized.js' which is generated by CMS).
3) Hide/Show Sign-in box and load sign-in page in iframe
4) Login/Logout Functionality. Associated methods: hasLoggedIn(), notYou(), signOut()
5) Reset Phone/Search Width - when the phone numbers are present, most often the phone-search section will be wider than the page-header-links. Whe this occurs, the script below will resize page-header-links to match the phone-search width
8) Show/Hide Inactivity Screen (based on session/cookie timeout) -Associated methods: show_inactivity_screen(),inactivity_screen_show_hide(),center_inactivity_lightbox(), prepareInactivity(),keepAlive(),setSessionCookie, clearSession(), resetSessionCookie(), deleteCokie()
7) Search Submit- doSubmitSearch()
*/


/*
 * Define Console.log for browsers that does not support
 */
if(typeof(console) === 'undefined') {
    var console = {}
    console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time = console.timeEnd = console.assert = console.profile = function() {};
}

/*
 * For pages that don't have princess.combined.css or princess-normalize.css / magnific-popup.css, we need to load wide_header_footer_helper.css / possibly magnific-popup.css
 */
var loadHelperCSS = true;
var loadMfpCSS = true;
var loadActionToolbarCSS = true;
for(var i = 0; i < document.styleSheets.length; i++){
	var styleSheetUrl = document.styleSheets[i].href;
	if (styleSheetUrl != undefined && styleSheetUrl != null) {
		if (styleSheetUrl.lastIndexOf('princess.combined.css') > -1 || styleSheetUrl.lastIndexOf('princess-normalize.css') > -1 || styleSheetUrl.lastIndexOf('air.combined.css') > -1 ) {
			loadHelperCSS = false;
		}
		if (styleSheetUrl.lastIndexOf('princess.combined.css') > -1 || styleSheetUrl.lastIndexOf('magnific-popup.css') > -1 || styleSheetUrl.lastIndexOf('air.combined.css') > -1 ) {
			loadMfpCSS = false;
		}
    if (styleSheetUrl.lastIndexOf('princess.combined.css') > -1 || styleSheetUrl.lastIndexOf('action-widget.css') > -1 || styleSheetUrl.lastIndexOf('air.combined.css') > -1 ) {
			loadActionToolbarCSS = false;
		}
	}
}
if (loadHelperCSS == true) {
	loadCSS('/css/global/wide_header_footer_helper.css');
}
if (loadMfpCSS == true) {
	loadCSS('/css/global/magnific-popup/magnific-popup.css');
}
if(loadActionToolbarCSS == true){
  loadCSS('/css/global/action-widget.css');
}




(function ($) {
	$(document).ready(function () {
		/*
		 * Temporary fix - add extra classes to princess-header when user is in CP
		 */
		var pathname = window.location.pathname,
		    origin = window.location.origin;
		if (origin == $bookURL) {
			if ((pathname.indexOf('/cruisepersonalizer/') > -1 && pathname.indexOf('/cruisepersonalizer/index.page') == -1 && pathname.indexOf('/cruisepersonalizer/logout.page') == -1) || (pathname.indexOf('/excursions/') > -1)) {
				$('#princess-header').addClass('show-headerbar-logo hide-headerbar-cruise-deals hide-headerbar-saved-cruises hide-headerbar-site-search hide-headerbar-email-offers');
			}
		}

		/*
		 * Header Site Search Events
		 */
		var $headerbarSiteSearchBtn = $('#headerbar-site-search-btn'),
			$headerSiteSearchForm = $('#header-site-search-field');
		// open header site-search for mobile devices
		$headerbarSiteSearchBtn.on('click', function () {
			$headerbarSiteSearchBtn.attr('aria-expanded','true');
			headerSiteSearch.show(false);
		});
		// close header site-search for mobile devices
		$('#close-headerbar-site-search-btn').on('click', function () {
			$headerbarSiteSearchBtn.attr('aria-expanded','false');
			headerSiteSearch.hide(false);
		});
		// initialize the site-search-form events
		if ($headerSiteSearchForm.length > 0) {
			if (typeof siteSearchForm === 'function') {
				siteSearchForm.init($headerSiteSearchForm);
			} else {
				loadJS('/js/global/site-search-form.js', function () {
					siteSearchForm.init($headerSiteSearchForm);
				});
			}
		}

		/*
		 * Navbar Events
		 */
		var $headerbarMenuBtn = $('#headerbar-menu-btn'),
		    $navbar = $('#navbar');

		// open & close navbar for mobile devices
		$headerbarMenuBtn.on('click', function (e) {
			$headerbarMenuBtn.trigger('blur');
			if ($headerbarMenuBtn.attr('aria-expanded') == 'false') {
				navbar.expandMobileMenu($headerbarMenuBtn,$navbar);
			} else {
				navbar.hideMobileMenu($headerbarMenuBtn,$navbar);
			}
		});

		// Close the mobile menu when user has it open and then resizes browser larger viewport that does not use the mobile menu */
		// Only setting the variable on resize event so that we don't lock up browser when doing a lot of scrolling
		var hasResized = false;
		$(window).on('resize', function (e) {
			hasResized = true;
		});
		// Using setInterval to check the hasResized variable to determine if the browser has been resized. If so, check to see if we need to close the mobile menu
		setInterval(function () {
			if (hasResized) {
				hasResized = false;
				// automatically close the mobile menu if the $headerbarMenuBtn is hidden & expanded state is true
				if ($headerbarMenuBtn.is(':hidden') && $headerbarMenuBtn.attr('aria-expanded') == 'true') {
					navbar.hideMobileMenu($headerbarMenuBtn,$navbar);
				}
			}
		}, 50);

		// Close the dropdown when user scrolls a minimum distance on tablet and desktop
		// Only setting the variable on scroll event so that we don't lock up browser when doing a lot of scrolling
		var hasScrolled = false,
		    lastScrollPos = $(window).scrollTop();
		$(window).scroll(function (e) {
			hasScrolled = true;
		});
		// Using setInterval to check the hasScrolled variable to determine if the browser has scrolled. If so, close the dropdown for tablet and desktops
		setInterval(function () {
			if (hasScrolled) {
				hasScrolled = false;
				if (Modernizr.mq('(min-width:48em)')) {
					// ignore small scroll events
					var currentScrollPos = $(window).scrollTop(),
					    scrollDistance = Math.abs(currentScrollPos - lastScrollPos);
					// hide the dropdowns when the scroll distance is more than 10, this should eliminate the accidental scroll on touch devices (track pads included)
					if (scrollDistance > 10) {
						navbar.hideAllDropdowns();
					}
					// update last scroll so the next calculation is based on the current position
					lastScrollPos = currentScrollPos;
				} else {
					headerSiteSearch.pinState();
				}
			}
		}, 50);

		// Test to make sure hoverIntent is available before initializing the navbar and my account events
		if (typeof $.fn.hoverIntent == 'function') {
			navbar.init();
			myAccount.init();
		} else {
			loadJS('/js/global/jquery/plugins/hoverIntent/jquery.hoverIntent.js', function() {
				navbar.init();
				myAccount.init();
  			});
		}

		/* Show localized content if the localeData exists */
		if (localeData == undefined || localeData == null) {
			$(document).on('getLocale', function () {
				localize.init();
			});
		} else {
			localize.init();
		}

		/* Show the Recently Viewed Cruises link in the mobile nav */
		if (docCookies.hasItem('rvc')) {
			$navbar.find('.recently-viewed-cruises').removeClass('hidden');
		}

	});

	/*
	 * Localized Elements
	 */
	// might need to move these into function that get's called when getLocale is ready
	var localize = {
		init: function () {
			localize.legacy();
			localize.specialOffers();
			localize.phone();
			loclink.init($('#princess-header'));
		},
		legacy: function () {
			var $footer = jQuery('#footer');
			showPrincessTollFreeNumber($footer);
			localizedLinks();
			displayPrincessRewards($footer);
			displayCruiseDeals($footer);
			displayBrochures($footer);
			displayKoi();
		},
		phone: function () {
			// show the correct phone
			if (typeof localeData.countryPhone == 'string' && localeData.countryPhone.length > 0) {
				$('.loc-phone-nu').text(localeData.countryPhone);
				$('#headerbar-call-btn,#cp-touch-phone').prop('href','tel:' + localeData.countryPhone);
			} else {
				$('#headerbar-call-btn,#cp-touch-phone,.loc-phone-nu').addClass('hidden');
			}
		},
		specialOffers: function () {
			if (localeData.specialOffers == 'true') {
				var guestInfoObj = guestProfile.getInfo();

				if (guestInfoObj == null) {
					// always show the specialOffers button (by using N) if guestInfo is not available
					localize.displaySpecialOffers('N');
				} else {
					localize.displaySpecialOffers(guestInfoObj.specialOffersFlag);
				}
			}
		},
		displaySpecialOffers: function (specialOffersFlag) {
			var $princessHeader = $('#princess-header'),
			    $princessFooter = $('#princess-footer');
			if (specialOffersFlag === 'Y') {
				$princessHeader.find('.headerbar-special-offers, .navbar-special-offers').addClass('hidden');
				$princessFooter.find('.special-offers').addClass('hidden');
			} else {
				$princessHeader.find('.headerbar-special-offers, .navbar-special-offers').removeClass('hidden');
				$princessFooter.on('click','.special-offers > a', function (e) {
					e.preventDefault();
					$princessHeader.find('.navbar-special-offers')[0].click();
				});
			}
		}

	}
  $(function(footerSlideShow){
  $('.footerSlideShow').each(function(){
    var $this = $(this);
    var $group = $this.find('.footer-slide-group');
    var $slides = $this.find('.footer-slide');
    var buttonArray = [];
    var currentIndex = 0;
    var timeout;

    //move()
    function move(newIndex){
      var animateLeft, slideLeft;

      advance();


      buttonArray[currentIndex].removeClass('slide-button-active');
      buttonArray[newIndex].addClass('slide-button-active');


      $slides.eq(newIndex).css({left: slideLeft, display: 'block'});
      $group.animate({left: animateLeft}, function(){
        if(currentIndex != newIndex){
          $slides.eq(currentIndex).css({display: 'none'});
          currentIndex = newIndex;
        }
      });
    }
    function advance() {
      clearTimeout(timeout);
      timeout = setTimeout(function(){
        if(currentIndex < ($slides.length -1)){
          move(currentIndex + 1);
        }else{
          move(0);
        }
      }, 8000);
    }
    $.each($slides, function(index){
      var $button = $('<div class="footerCircle"></div>');
      if(index === currentIndex){
        $button.addClass('slide-button-active');
      }
      $button.on('click', function(){
        move(index);
      }).appendTo($this.find('.footer-slide-buttons'));
      buttonArray.push($button);
    });
    advance();
  });
});

	/*
	 * My Account
	 */
	var myAccount = {
		expandDropdown: function ($dropdownToggle) {
			$dropdownToggle.attr('aria-expanded','true').closest('.headerbar-btn').addClass('expanded');
		},
		hideDropdown: function ($dropdownToggle) {
			$dropdownToggle.attr('aria-expanded','false').closest('.headerbar-btn').removeClass('expanded');
		},
		toggleDropdown: function ($dropdownToggle,eventType) {
			if (eventType == 'touch' && $dropdownToggle.attr('aria-expanded') == 'true') {
				myAccount.hideDropdown($dropdownToggle);
			} else {
				myAccount.expandDropdown($dropdownToggle);
			}
		},
		init: function () {
			var $princessHeader = $('#princess-header'),
			    $myAccountDropdownToggle = $princessHeader.find('.my-account-dropdown-toggle'),
			    $myAccountDropdown = $princessHeader.find('.my-account-dropdown'),
			    $headerbarMyAccount = $('.headerbar-btn.my-account'),
			    myAccountMouseleaveTimeout = undefined;

			// Use preventDefault() inside touch event handlers, so the default mouse-emulation handling does not occur - http://www.html5rocks.com/en/mobile/touchandmouse/
			$myAccountDropdownToggle.hammer().on('tap press', function (e) {
				e.preventDefault();
				myAccount.toggleDropdown($(this),'touch');
			});
			// Toggle my account dropdown on click
			$myAccountDropdownToggle.on('click', function (e) {
				e.preventDefault();
				myAccount.toggleDropdown($(this),'click');
			});
			// Using hoverIntent to make sure the user is seeing the dropdown that they are intending to see
			$('.headerbar-menu').hoverIntent({
				over: function (e) {
					myAccount.toggleDropdown($(this),'hover');
				},
				out: function (e) {
					// need this here, to prevent the over from begin used on the out
					$.noop();
				},
				selector: '.my-account-dropdown-toggle'
			});
			// when the mouse leaves the my account dropdown for a minimum amount of time
			$headerbarMyAccount.on('mouseleave', function (e) {
				myAccountMouseleaveTimeout = window.setTimeout(function () {
					myAccount.hideDropdown($myAccountDropdownToggle,'hover');
				}, 250);
			});
			// if myAccountMouseleaveTimeout is counting down, clear it when the mouse re-enters the dropdown
			$headerbarMyAccount.on('mouseenter', function (e) {
				if (typeof myAccountMouseleaveTimeout === 'number') {
					window.clearTimeout(myAccountMouseleaveTimeout);
					myAccountMouseleaveTimeout = undefined;
				}
			});

			//display links in my-account-dropdown based on user's log in status
			if (hasLoggedIn()) {
				//legacy function for displaying user's name
				printNameonGreeting("NAME_ON_TOP_BANNER");

				// bind signout function to the button
				$('.my-account-signout-btn').on('click', function () {
					signOut();
				});
				// show links for logged in users
				$princessHeader.find('.user-logged-in').removeClass('hidden');

			} else {
				// show links for logged out users
				$princessHeader.find('.user-logged-out').removeClass('hidden');

				// display user's name if remember me was cheked at last signin
				if(hasKeptSignedIn()) {
					printNameonGreeting("pnotp");
				}
			}
		}
	}

	/*
	 * Header Site Search - handles the display mobile vs tablet/desktop views, and handling the form
	 */
	var headerSiteSearch = {
		className: function (inMenu) {
			var className = 'visible';
			if (inMenu) {
				className += '-in-menu';
			}
			return  className;
		},
		hide: function (inMenu) {
			// remove class to hide header-site-search
			$('.header-site-search').removeClass(headerSiteSearch.className(inMenu));
			headerSiteSearch.dataLayer('hide-site-search',inMenu);
		},
		show: function (inMenu) {
			// add class to show header-site-search
			$('.header-site-search').addClass(headerSiteSearch.className(inMenu));
			headerSiteSearch.dataLayer('view-site-search',inMenu);
			if (!inMenu) {
				$('#header-site-search-field').trigger('focus');
			}
		},
		pinState: function () {
			var windowScrollPos = $(window).scrollTop(),
				$headerSiteSearch = $('.header-site-search'),
			    menuHeight = $('#navbar').data('menuHeight'),
			    headerSiteSearchHeight = $headerSiteSearch.outerHeight(),
			    headerbarHeight = $('#headerbar').outerHeight();

			if ((windowScrollPos + headerbarHeight) > menuHeight) {
				if (!$headerSiteSearch.hasClass('unpinned')) {
					$headerSiteSearch.addClass('unpinned');
				}
			} else {
				if ($headerSiteSearch.hasClass('unpinned')) {
					$headerSiteSearch.removeClass('unpinned');
				}
			}
		},
		dataLayer: function (eventType, inMenu) {
			var pageSection;
			if (inMenu) {
				pageSection = 'Navbar';
			} else {
				pageSection = 'Header';
			}
			if (typeof window.dataLayer == 'object') {
				window.dataLayer.push({
					'event': eventType,
					'page-section': pageSection
				});
			}
		}
	}

	var navbar = {
		expandDropdown: function ($dropdownToggle) {
			$dropdownToggle.attr('aria-expanded','true').closest('.navbar-dropdown').addClass('expanded').find('.pc-icons').removeClass('blue-downarrow-10').addClass('blue-uparrow-10');
		},
		hideDropdown: function ($dropdownToggle) {
			$dropdownToggle.attr('aria-expanded','false').closest('.navbar-dropdown').removeClass('expanded').find('.pc-icons').removeClass('blue-uparrow-10').addClass('blue-downarrow-10');
		},
		hideAllDropdowns: function () {
			var $expandedDropdowns = $('.navbar-dropdown.expanded > .navbar-dropdown-toggle');
			if ($expandedDropdowns.length > 0) {
				navbar.hideDropdown($expandedDropdowns);
			}
		},
		toggleDropdown: function ($dropdownToggle,eventType) {
			if (Modernizr.mq('(min-width: 48em)')) {
				if (eventType == 'touch' && $dropdownToggle.attr('aria-expanded') == 'true') {
					navbar.hideDropdown($dropdownToggle);
				} else {
					navbar.hideAllDropdowns();
					navbar.expandDropdown($dropdownToggle);
				}
			} else {
				if (eventType == 'touch' || eventType == 'click') {
					if ($dropdownToggle.attr('aria-expanded') == 'true') {
						navbar.hideDropdown($dropdownToggle);
					} else {
						navbar.expandDropdown($dropdownToggle);
					}
					$('#navbar').trigger('mobile-nav-toggle');
				}

			}
		},
		init: function () {
			var $navbar = $('#navbar'),
			    $navbarMenu = $('.navbar-menu'),
			    $navbarDropdownToggle = $('.navbar-dropdown-toggle'),
			    navbarMouseleaveTimeout = undefined;

			// Use preventDefault() inside touch event handlers, so the default mouse-emulation handling does not occur - http://www.html5rocks.com/en/mobile/touchandmouse/
			$navbarDropdownToggle.on('touchend', function (e) {
			  	e.preventDefault();
			});
			// Using touch event plugin hammer.js to attach native touch events to navbarDropdownToggle
			$navbarDropdownToggle.hammer().on('tap', function (e) {
				e.preventDefault();
				navbar.toggleDropdown($(this),'touch');
			});
			// When using a browser that has native click and viewport smaller than a tablet,
			// block the click on the navbarDropdownToggle to prevent the browser from going to the next screen
			$navbarDropdownToggle.on('click', function (e) {
				if (Modernizr.mq('(max-width: 47.9375em)')) {
					e.preventDefault();
				}
			});
			$navbarMenu.hoverIntent({
				over: function (e) {
					navbar.toggleDropdown($(this),'hover');
				},
				out: function (e) {
					// need this here, to prevent the over from begin used on the out
					$.noop();
				},
				selector: '.navbar-dropdown-toggle'
			});
			// hide the dropdown when the mouse leaves the dropdown for a minimum amount of time
			$navbarMenu.on('mouseleave', function (e) {
				navbarMouseleaveTimeout = window.setTimeout(function () {
					if (Modernizr.mq('(min-width:48em)')) {
						navbar.hideAllDropdowns();
					}
				}, 250);
			});
			// mouseleaveTimeout is counting down, clear it when the mouse re-enters the dropdown
			$navbarMenu.on('mouseenter', function (e) {
				if (typeof navbarMouseleaveTimeout === 'number') {
					window.clearTimeout(navbarMouseleaveTimeout);
					navbarMouseleaveTimeout = undefined;
				}
			});
			// Set the height when the mobile nav is toggled
			$navbar.on('mobile-nav-toggle', function () {
				$navbar.data('menu-height',$navbar.height());
			});
		},
		expandMobileMenu: function ($headerbarMenuBtn,$navbar) {
			var navbarHeight = $navbar.find('.navbar-wrapper').height(),
			    windowHeight = $(window).height();
			// scroll window to top of page
			$('html,body').stop().scrollTop(0);
			// display header site search
			headerSiteSearch.show(true);
			// animate the opening of the mobile menu
			$navbar.stop().animate({ 'height':navbarHeight}, 400, function(){
				// after animate, set the height to auto so that navbar can expand when a top-level menu item is opened
				$navbar.css('height','auto').trigger('mobile-nav-toggle');
				// need to add a way to remove the style attribute when the device goes from mobile to tablet so that the dropdown will display on tablet/desktop devices after it's been opened (not closed) on mobile... its the overflow: hidden that is causing the issue
			});
			// set the expanded state on the button
			$headerbarMenuBtn.attr('aria-expanded','true').addClass('expanded');
		},
		hideMobileMenu: function ($headerbarMenuBtn,$navbar) {
			// hide header site search
			headerSiteSearch.hide(true);
			// make sure on dropdowns are closed
			navbar.hideAllDropdowns();
			// purge inline styling and trigger the custom event
			$navbar.removeAttr('style').trigger('mobile-nav-toggle');
			// update the expanded state
			$headerbarMenuBtn.attr('aria-expanded','false').removeClass('expanded');
		}
	}

	// add ada icon to accessible cruising link in footer
	var $footerADAlink = $('#footer').find('.ada-link > a');
	if ($footerADAlink.length > 0) {
		$footerADAlink.prepend('<span class="pc-icons black-ada-12"></span>');
	}
}(jQuery));




jQuery(document).ready( function (){
	/* To track the links for Google Analytics */
	var pagename="";
	if (jQuery("#princess-header").attr('data-pagename') !== undefined) {
		pagename = jQuery("#princess-header").attr('data-pagename');
	}

	/* Load saved cruise count */
	if (hasLoggedIn() && typeof savedCruiseCount == 'object') {
		savedCruiseCount.load();
	}

	/*Run P13N in footer*/
	runP13N('#princess-footer');

	/* UK Cookie Notice */
	jQuery(document).on('click','.lightbox-close-window-top > .close-btn, .koi-link',function(e){
		e.preventDefault();
		var target = jQuery(e.target);

		if(jQuery('#koi-mini-site').length > 0 ){
			setSessionCookie('koi_mini_site',true,1740000);
		}
		if(target.hasClass('koi-link')) {
			window.setTimeout(function(){
				window.location = target.attr('href');
			},200);
		}
	});

	jQuery(document).on('click','#close-uk-notice, #uk-legal',function(e){
		e.preventDefault();
		var target = jQuery(e.target);
		jQuery('#uk-notice').stop().animate({ 'bottom':'-125px'}, 800, function(){
			jQuery(this).remove();
			setSessionCookie('uk_ok',true,1740000);
			if(target.is('a')){
				window.location = target.prop('href');
			}
		});
	});

	var ukCookieOK = getCookie('uk_ok');
	jQuery(window).load( function(){
		if(isEU == 'true' && (ukCookieOK == null || ukCookieOK == "") && self==top) {
			jQuery('body').append('<div id="uk-notice">This website uses cookies to give you the very best user experience. By using our website, you agree that we can place cookies on your device. For more information see the <a id="uk-legal" href="/legal/index.jsp">Legal, Privacy &amp; Cookies</a>.<div id="close-uk-notice"><img src="/images/global/lightbox_close-btn.png" height="50" width="110"></div></div>');
			jQuery('#uk-notice').animate({ 'bottom':'15px'}, 800);
		}
	});

	setInterval(poll,500);

	loadFB();

	/*
	Delete Persistent Cookie - Delete the cookies if sniffed country is not same as the persistent country
	                         - using pcl_deletePersCookies storageSession to run this call at the beginning of user's session
	                         - returned status options are: deletedcookie vs retainedcookie
	                         - we want to ignore users on setLocale to ensure we don't disrupt locale switching
	*/
	var deletePersCookies;
	if ($('html').hasClass('sessionstorage')) {
		if (window.location.pathname === '/setLocale.do') {
			// clear sessionStorage when user is on setLocale.do
			sessionStorage.removeItem('pcl_deletePersCookies');
		} else {
			deletePersCookies = sessionStorage.getItem('pcl_deletePersCookies');
		}
	}
	if (!!deletePersCookies === false) {
		jQuery.ajax({
			cache: false,
			contentType: 'application/json',
			dataType: 'jsonp',
			global: false,
			method: 'GET',
			url: $bookURL + '/captaincircle/deletePersistentCookies.do'
		})
		.done(function (result) {
			// save results in sessionStorage to prevent subsequent calls in same session
			if (typeof docCookies === 'object' && window.location.pathname !== '/setLocale.do' && $('html').hasClass('sessionstorage')) {
				sessionStorage.setItem('pcl_deletePersCookies', result.status);
			}
		})
		.fail(function (req, error) {
			if (error === 'error') {
				error = req.statusText;
			}
			console.log("ERROR IN captaincircle/deletePersistentCookies.do " + error);
		});
	}

	/* Prevent click on top level anchor tags in menu if using touch browser with gesture support */
	if (Modernizr.hasEvent('touchend') && $(window).width() < 1025) {
		jQuery('.sf-with-ul > a').on('click', function(e) {
		 	e.preventDefault();
		});
	}
}); /*end document.ready*/

//for encoding search terms for use in url
function fixedEncodeURIComponent(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
    return '%' + c.charCodeAt(0).toString(16);
  });
}

/* Delaying the equalFooterCol until after the page loads to ensure everything is in the footer before calculating the min-height for desktop.
 * This is being done to resolve an issue in Chrome and IE where the row height was being incorrectly calculated and setting the min-height to an extremely large value.
 */
jQuery(window).on('load', function () {
	if (!jQuery('html').hasClass('oldie')) {
		equalFooterCol();

		jQuery(window).on('resize', function () {
			equalFooterCol();
		});
	}

});

/* Load FB Like button only when the user scrolls to the bottom of the web page */
function loadFB() {
	var footerFbLike = jQuery('#footer-fb-like');
	if(footerFbLike.length > 0){
		jQuery(window).on('scroll.loadFBbtn',function(){
			if(footerFbLike.isOnScreen()){
				jQuery(window).off('scroll.loadFBbtn');
				if(footerFbLike.empty()){
					footerFbLike.append('<iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.facebook.com%2FPrincessCruises&amp;send=false&amp;layout=button_count&amp;width=75&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:45px; height:21px; margin: 0;" allowTransparency="true"></iframe>');
				}
			}
		});
	}
}

/* Equalize footer columns */
function equalFooterCol() {
	jQuery('.footerCol').css('min-height', 0);

	if (jQuery(window).width() >= 960) {
		jQuery('.footerCol').each(function() {
			var target = jQuery(this),
				rowHeight = target.closest('.row').height();
			if (target.outerHeight() < rowHeight) {
				target.css('min-height', rowHeight);
			}
		});
	} else {
		var target = jQuery('.footerCol.get-brochure'),
			rowHeight = target.closest('.row').height();
		if (target.outerHeight() < rowHeight) {
			target.css('min-height', rowHeight);
		}
	}
}

/* Load localized links based on data- attributes and current loc setting. */
function localizedLinks() {
	var countryCode = localeData.status.toLowerCase();
	jQuery('#princess-footer,#content').find('.loc-link').not('.loc-text').each(function () {
		var $link = jQuery(this),
			url = '',
			text = '',
			target = '',
			src = '';

		if (typeof $link.data(countryCode + 'Url') != 'undefined' && $link.data(countryCode + 'Url') != '') {
			url = $link.data(countryCode + 'Url');
		} else if (typeof $link.data('url') != 'undefined' && $link.data('url') != '') {
			url = $link.data('url');
		}

		if (typeof $link.data(countryCode + 'Text') != 'undefined' && $link.data(countryCode + 'Text') != '') {
			text = $link.data(countryCode + 'Text');
		} else if (typeof $link.data('text') != 'undefined' && $link.data('text') != '') {
			text = $link.data('text');
		}

		if (typeof $link.data(countryCode + 'Target') != 'undefined' && $link.data(countryCode + 'Target') != '') {
			target = 'target="' + $link.data(countryCode + '-target') + '"';
		} else if (typeof $link.data('target') != 'undefined' && $link.data('target') != '') {
			target = 'target="' + $link.data('target') + '"';
		}

		if (typeof $link.data(countryCode + 'Src') != 'undefined' && $link.data(countryCode + 'Src') != '') {
			src = $link.data(countryCode + 'Src');
		} else if (typeof $link.data('src') != 'undefined' && $link.data('src') != '') {
			src = $link.data('src');
		}

		// if a country is set to exclude, clear all vars to not display link in nav
		if (typeof $link.data('exclude') != 'undefined' && $link.data('exclude') != '') {
			var excludeCountry = $link.data('exclude').split(',');
			for (var i = 0; i < excludeCountry.length; i++) {
				if (excludeCountry[i] == countryCode) {
					url = '';
					text = '';
					target = '';
					src = '';
				}
			}
		}

		if (url == '') {
			if ($link.is('a') || $link.html() == '') {
				$link.remove();
			}
		} else {
			if (src == '') {
				if ($link.is('a')) {
					$link.prop('href',url).text(text);
				} else {
					if ($link.children('a').length == 0) {
						$link.html('<a href="' + url + '" ' + target + '>' + text + '</a>');
					} else {
						$link.children('a').prop('href',url).text(text);
					}
				}
			} else {
				$link.html('<a href="' + url + '" ' + target + '><img src="' + src + '" alt="' + text + '" /></a>');
			}
		}

		//custom trigger event
		if ($link.hasClass('nav-get-brochure')) {
			$link.trigger('brochureReady');
		}
	});
}

/*
 * Inactivity Window
 */
var inactivity_layout='<div id="inactivity-screen"><div class="lite-popup"><div id="white-overlay"></div></div></div>';
var inactivity_content='<div id="inactivity-warning">\
			<h3>Alert:</h3>\
			<p class="error">Due to inactivity, your browsing session is about to expire. To maintain the security of your personal information, you will automatically be signed out momentarily.<p>\
			<a class="global-button" href="javascript:keepAlive();" id="continue-session">Continue Session</a> &nbsp; <a href="javascript:clearSession(\'N\',\'N\');" id="signout">Log Out Now &raquo;</a>\
		  </div>';

//Inactivity Screen Show/Hide
function inactivity_screen_show_hide(){
	center_inactivity_lightbox();
	//To Adjust the position of lighbox (Center of the page)
	var div= jQuery('#inactivity-warning');
	div.css("left", (jQuery(window).width() - div.width())/2  + 'px');
	//Fix the issue of lightbox overlay not covering the whole height in IE6
	if(jQuery.browser.msie && jQuery.browser.version < 7){
		var overlayHeight =jQuery('#white-overlay');
		overlayHeight.css("height", jQuery(document).height() ) ;
	}
	if(jQuery.browser.msie && jQuery.browser.version < 7) {
		if(jQuery('#inactivity-warning').css('display')=="block"){
			jQuery('#container select').css('visibility', 'hidden');
			}
		else {
			jQuery('#container select').css('visibility', 'visible');
		  }
	  }
	//To hide the lightbox on clicking close button
	jQuery('#inactivity-warning .close-box, #continue-session').click(function() {
		jQuery('#inactivity-screen').remove();
		// IE6 select overlapping over popup div issue
		if(jQuery.browser.msie && jQuery.browser.version < 7){
			jQuery('#container select').css('visibility', 'visible');
		}
	});
}

//To Adjust the position of lighbox when window is resized
function center_inactivity_lightbox(){
	var topPosition=jQuery(window).scrollTop();
	jQuery('#inactivity-warning').css('top',topPosition+100);
	jQuery(window).resize(function() {
		var div= jQuery('#inactivity-warning');
		div.css("left", (jQuery(window).width() - div.width())/2  + 'px');
	});
}

/* Load Inactivity Screen Content */
function show_inactivity_screen(){
	jQuery('body').prepend(inactivity_layout);
	jQuery('#inactivity-screen .lite-popup').append(inactivity_content);
	inactivity_screen_show_hide();
}

var timerId;
var timeoutId;

resetSessionCookie();
checkInactivity();

/*
 * Show Toll Free Numbers in header & footer
 */
function getPhoneNumber() {
	if (typeof localeData.countryPhone == 'string') {
		return localeData.countryPhone;
	} else {
		return '';
	}
}

function showPrincessTollFreeNumber(){
	if(localeData.country=="UK" || localeData.country=="GB" || localeData.country=="AU" || localeData.country=="NZ" || localeData.country=="US" || localeData.country=="CA" || localeData.country=="MX" || localeData.country=="SG" || localeData.country=="VN" || localeData.country=="BN" || localeData.country=="MY" || localeData.country=="ID" || localeData.country=="HK") {
		jQuery('.toll-free-number').text(getPhoneNumber());
		jQuery('.footer-contact').prepend('<span class="no-wrap call-toll-free footer-contact-item footer-contact-first">Call Us: <a class="invert-decoration text-white" href="tel:' + getPhoneNumber() + '">' + getPhoneNumber() + '</a></span>');
		if (jQuery('.toll-free-placeholder').is(":hidden")) {
			jQuery('.toll-free-placeholder').show();
		}
	} else {
		jQuery('.toll-free-placeholder').html('');
	}
}

function checkInactivity() {
	if(hasLoggedIn()) {
		timerId = setTimeout("prepareInactivity()",1740000);
	}
}
function prepareInactivity() {
	show_inactivity_screen();
	clearTimeout(timerId);
	timeoutId = setTimeout("clearSession_forInactivity()",60000);
	//timeoutId = setTimeout("clearSession_forInactivity()",10000);
    return false;
}
function keepAlive() {
	clearTimeout(timeoutId);
	setTimeout("prepareInactivity()",1740000);
	resetSessionCookie();
}
function clearSession_forInactivity() {
	clearSession("N","Y");
}

//Function returns the value of the QueryString
function getQueryVariable(variable) {
   var query = window.location.search.substring(1);
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");
        if (pair[0] == variable) {
            return pair[1];
        }
    }
    return null;
}

function clearSession(deletePersCookie, fromInactivity) {
	clearTimeout(timeoutId);
	deleteCokie("sccn","/",".princess.com");
	jQuery.ajax({
	type: "GET",
	url: $bookURL+'/captaincircle/logoutFromCC.do?ina='+deletePersCookie ,
	dataType:"jsonp",
	global:false,
	success:function(result){
		if(document.location.href.indexOf(".com/cruisepersonalizer")!=-1) {
			document.location.href = $bookURL+"/cruisepersonalizer/index.page";
		}else if(document.location.href.indexOf(".com/reserve")!=-1) {
			if(fromInactivity == 'Y') {
				document.location.href = $bookURL+"/reserve/backToDetailsAndAvailability.do";
			} else {
				window.location.reload();
			}
		} else if(document.location.href.indexOf("/find/searchResults.do")!=-1) {
			window.location.hash = "";
			jQuery("#productCode").val('');
			document.searchResultsForm.submit();
		} else if(document.location.href.indexOf("/find/cruiseDetails.do")!=-1) {
			window.location.hash = "";
			document.cruiseDetailForm.submit();
		} else {
			window.location.reload();
		}
	},
	error: function(e) {
	    console.log("ERROR IN captaincircle/logoutFromCC.do " + e.responseText);
	}
   });
}

function resetSessionCookie() {
	sccn = getCookie("sccn");
	if(hasLoggedIn()) {
		deleteCokie("sccn","/",".princess.com");
		setSessionCookie("sccn",sccn);
	}
}

function deleteCokie(sName, path, domain) {
	var expDate = new Date();
	//set the date value to the past
	expDate.setTime(expDate.getTime()-100000);

	if ( getCookie( sName ) !=null && getCookie("sName") != "") {
		document.cookie = sName  + "=test" +
		( ( path ) ? ";path=" + path : "") +
		( ( domain ) ? ";domain=" + domain : "" ) +";expires="+expDate.toGMTString()+ "; ";
	}
	//document.cookie = sName + "=; expires=Thu, 01-Jan-70 00:00:01 GMT";

}

function setSessionCookie(sName, sValue, sTime) {
	var dt = new Date(),
		expires = 0;
	if (sTime == undefined) {
		dt.setTime( dt.getTime() + 30*60*1000 );
		expires = dt.toGMTString();
	} else if (sTime > 0) {
		dt.setTime( dt.getTime() + sTime*60*1000);
		expires = dt.toGMTString();
	}

	if (getCookie(sName)==null) {
		if(isValidUsrURL(path)) {
			document.cookie = sName + "=" + escape(sValue) + "; " +
				"path=/;" + 'expires=' + dt.toGMTString()+ "; ";
		} else {
			domainname='.princess.com';
			document.cookie = sName + "=" + escape(sValue) + "; " +
				"path=/; domain=" + domainname + ";"+ 'expires=' + expires + "; ";
		}
	}
}

function poll() {
    if(window.location.hash != "#si") {
        return;
    }
	jQuery('#sign-in-box').fadeOut('fast');
    if(document.location.href.indexOf("/find/searchResults.do")!=-1) {
		window.location.hash = "";
		jQuery("#productCode").val('');
		document.searchResultsForm.submit();
	}else if(document.location.href.indexOf("/find/cruiseDetails.do")!=-1) {
		window.location.hash = "";
		document.cruiseDetailForm.submit();
	}else{
		window.location.hash = "";
		window.location.reload();
	}
}

function displayPrincessRewards($footer) {
	if (loc != 'US' && $footer.length > 0) {
		$footer.find('.sublinks_princess-rewards').hide().prev('h2').hide();
	}
}

function displayCruiseDeals($footer) {
	if (localeData.brochures == 'false') {
		if ($footer.length > 0) {
			$footer.find('.sublinks_cruise-deals').hide().prev('h2').hide();
		}
	}
}

function displayBrochures($footer) {
	if (localeData.brochures == 'false') {
		if ($footer.length > 0) {
			$footer.find('.sublinks_brochures').hide().prev('h2').hide().siblings('h2').css({'padding-top':'0'});
		}
	}
}

function displayKoi() {
	if(localeData.country == 'JP' || localeData.country == 'CN' || localeData.country == 'KR' ){
		var popupContent = '/html/global/popups/koi/'+localeData.country+'.html';
		var koiBarLink, koiBarLinkText;
		if(localeData.country == 'JP'){
			koiBarLink = 'http://www.princesscruises.jp/';
			koiBarLinkText = '&#12503;&#12522;&#12531;&#12475;&#12473;&#12539;&#12463;&#12523;&#12540;&#12474;&#26085;&#26412;&#35486;&#23554;&#29992;&#12469;&#12452;&#12488;&#12399;&#12371;&#12385;&#12425; http://www.princesscruises.jp/';
		}
		if(localeData.country == 'CN'){
			koiBarLink = 'http://www.princesschina.com/';
			koiBarLinkText = '&#35775;&#38382;&#20013;&#25991;&#23448;&#32593;&#65292;&#35831;&#28857;&#20987;&#27492;&#22788; http://www.princesschina.com/';
		}
		if(localeData.country == 'KR'){
			koiBarLink = 'http://www.princesscruises.co.kr/';
			koiBarLinkText = '&#54532;&#47536;&#49464;&#49828;&#53356;&#47336;&#51592; &#54620;&#44397; &#50937;&#49324;&#51060;&#53944;&#47484; &#48169;&#47928; &#54616;&#47140;&#47732; &#51060;&#44275;&#51012; &#53364;&#47533;&#54616;&#49464;&#50836;. http://www.princesscruises.co.kr/';
		}
		var koiBar = '<div id="koi-alert"><div><a href="'+koiBarLink+'">'+koiBarLinkText+'</a></div></div>';
		if(getCookie('koi_mini_site') != 'true'){
			openLightbox(popupContent,false,true,'no-min-width','');
		}
		jQuery('#container').prepend(koiBar);
	}
}


jQuery.isBlank = function(object) {
        return (
            (jQuery.isPlainObject(object) && jQuery.isEmptyObject(object)) ||
            (jQuery.isArray(object) && object.length == 0) ||
            (typeof(object) == "string" && jQuery.trim(object) === "") ||
            (!object)
        );
    };


/*
 * User Login and Logout
 */

function hasKeptSignedIn() {
	var ploginId = getCookie("pccn");
	return (!isBlank(ploginId));
}

function notYou(){
	jQuery("#signin-btn").removeAttr("disabled");
	clearSession("Y","N");
}

function signOut(){
	jQuery("#signin-btn").removeAttr("disabled");
	clearSession("N","N");
}

function printGreeting(){
	if(hasLoggedIn()) {
		  printNameonGreeting("NAME_ON_TOP_BANNER");
	} else if(hasKeptSignedIn()) {
		  printNameonGreeting("pnotp");
	}
}

function printSignInBanner() {
	if(hasLoggedIn()) {
		jQuery("#signin-signout").html(' <a class="header-sign-out" href="javascript:signOut()">Log Out</a><a href="'+ $bookURL +'/captaincircle/myPrincess.page">My Princess</a>');
		//jQuery('#nav-sign-in').closest('li').html('<a href="'+ $bookURL +'/captaincircle/myPrincess.page" class="header-my-princess">My Princess</a> <span class="header-divider">|</span> <a class="header-sign-out" href="javascript:signOut()">Log Out</a>');
		jQuery('#nav-sign-in').replaceWith('<a class="header-sign-out" href="javascript:signOut()"><span class="ir pc-icons user-22"></span>Log Out</a>');
	} else {
		if(jQuery('#header').hasClass('responsive-header')){
			var lightboxClass = 'class="open-mfp-header-SI"',
				initMFPSI = true;
		}else{
			var lightboxClass = 'class="open-iframe no-min-width disableBottomBtn" data-height="500" data-width="650"';
		}
		jQuery("#signin-signout").html('<a href="'+ $bookURL +'/captaincircle/renderQLForm.page" ' + lightboxClass + '>Log In / Register</a>');
		if(initMFPSI){
			initMFPheaderSI();
		}
	}
}

var guestContactInfo;
function printNameonGreeting(cookieName) {
	if (guestContactInfo === undefined) {
		jQuery.ajax({
		    type: 'GET',
		    url: $swwwURL+'/getNameOnTopBanner.do',
		    dataType: 'jsonp',
		    global: false
		})
		.done(function (results) {
			guestContactInfo = results.data;
			jQuery('#princess-header').find('.my-account-welcome').text('Welcome ' + guestContactInfo.firstName + '!');
		})
		.fail(function (e) {
			//jQuery('#princess-header').find('.my-account-welcome').text('Welcome!');
		});
	}
}

function runP13N(selector){
	if(typeof P13NListItem !== 'undefined') {

		var p13n_list_item;
		if (host_name=="www.princess.com" || host_name=="book.princess.com" || host_name=="ezbook.princess.com" ){
			P13NListItem.prototype.url = "https://p13n.princess.com/soln-p13n/delivery/deliver";
		} else {
			P13NListItem.prototype.url = "https://stagebook.princess.com/soln-p13n/delivery/deliver";
		}

		if(typeof selector == 'undefined' || selector == ''){
			selector = document;
		}

		jQuery(selector).find("span[class^='p13nListItemId']").each(function() {
			var temp_id_holder = (this.className.split('_'))[1];
			if(P13NListItem) {
				p13n_list_item = new P13NListItem(temp_id_holder, '', '', '', '');
				p13n_list_item.run();
			}
		});

	} else {
		console.log('p13 not available');
	}
}
